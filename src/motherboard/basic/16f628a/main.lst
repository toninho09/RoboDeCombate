CCS PCM C Compiler, Version 4.074, 38112               21-mar-14 22:01

               Filename: C:\Users\Zenner\SkyDrive\RDC\RoboDeCombate\src\motherboard\basic\16f628a\main.lst

               ROM used: 628 words (31%)
                         Largest free fragment is 1420
               RAM used: 28 (12%) at main() level
                         44 (20%) worst case
               Stack:    6 worst case (3 in main + 3 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   237
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  28
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  MOVF   7B,W
0019:  MOVWF  27
001A:  BCF    03.7
001B:  BCF    03.5
001C:  MOVLW  8C
001D:  MOVWF  04
001E:  BTFSS  00.0
001F:  GOTO   022
0020:  BTFSC  0C.0
0021:  GOTO   0D4
0022:  MOVF   22,W
0023:  MOVWF  04
0024:  MOVF   23,W
0025:  MOVWF  77
0026:  MOVF   24,W
0027:  MOVWF  78
0028:  MOVF   25,W
0029:  MOVWF  79
002A:  MOVF   26,W
002B:  MOVWF  7A
002C:  MOVF   27,W
002D:  MOVWF  7B
002E:  MOVF   28,W
002F:  MOVWF  0A
0030:  SWAPF  21,W
0031:  MOVWF  03
0032:  SWAPF  7F,F
0033:  SWAPF  7F,W
0034:  RETFIE
.................... #include "main.h" 
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES INTRC_IO                 //Internal RC Osc, no CLKOUT 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
....................  
.................... #use delay(clock=4000000) 
.................... #use rs232(baud=2400,parity=N,xmit=PIN_B2,rcv=PIN_B1,bits=8) 
....................  
....................  
.................... #include "lib/config.c" 
.................... /** 
.................... A0 = USE MOTOR_0 
.................... A1 = USE MOTOR_0 
.................... A2 = NOT USE 
.................... A3 = NOT USE 
.................... A4 = NOT USE 
.................... A5 = MRCLR 
.................... A6 = USE MOTOR_1 
.................... A7 = USE MOTOR_1 
.................... B0 = NOT USE 
.................... B1 = USE RX 
.................... B2 = USE TX 
.................... B3 = USE LED 
.................... B4 = USE MOTOR_2 
.................... B5 = USE MOTOR_2 
.................... B6 = USE MOTOR_3 
.................... B7 = USE MOTOR_3 
.................... */ 
.................... /* campos para validação de comando  
....................    todas as mensagens devem ser enviadas da seguinte maneira 
....................    msg_valid_1 , msg_valid_2 , comando 1 , comando 2 
....................    tem a funçao de evitar statica e recebimento indevido 
....................  
.................... */ 
.................... const int msg_valid_1 = 0xf0; 
.................... const int msg_valid_2 = 0x20; 
.................... //estrutura para facilitar o uso dos pinos em funções 
.................... struct MotorPin 
.................... { 
....................    int pin_enable; 
....................    int pin_dir; 
.................... }; 
....................  
.................... // cria o numero de esquemas do struct desejada , corresponde ao numero 
.................... // de motores que vc quer controlar 
.................... struct Motorpin motorpin[4]; 
....................  
.................... // variavel para armazenar os comandos recebidos do serial; 
.................... int cmd[3]; 
....................  
.................... // constante criada para facilitar a chamada do led no programa 
.................... const int led = PIN_B3; 
....................  
.................... // função de configuração , não altere se nao souber o que esta fazendo 
.................... void config() 
.................... { 
....................    motorpin[0].pin_enable = PIN_A0; 
*
00EF:  MOVLW  28
00F0:  MOVWF  2A
....................    motorpin[0].pin_dir = PIN_A1; 
00F1:  MOVLW  29
00F2:  MOVWF  2B
....................    motorpin[1].pin_enable = PIN_A6; 
00F3:  MOVLW  2E
00F4:  MOVWF  2C
....................    motorpin[1].pin_dir = PIN_A7; 
00F5:  MOVLW  2F
00F6:  MOVWF  2D
....................    motorpin[2].pin_enable = PIN_B4; 
00F7:  MOVLW  34
00F8:  MOVWF  2E
....................    motorpin[2].pin_dir = PIN_B5; 
00F9:  MOVLW  35
00FA:  MOVWF  2F
....................    motorpin[3].pin_enable = PIN_B6; 
00FB:  MOVLW  36
00FC:  MOVWF  30
....................    motorpin[3].pin_dir = PIN_B7; 
00FD:  MOVLW  37
00FE:  MOVWF  31
.................... } 
00FF:  GOTO   267 (RETURN)
....................  
....................  
.................... #include "lib/comand.c" 
.................... void Sync() 
.................... { 
....................    set_timer1(0); 
*
0114:  CLRF   0F
0115:  CLRF   0E
.................... } 
....................  
.................... void moverMotor(struct Motorpin motorpin,int comando) 
.................... { 
....................    switch (comando) 
....................    { 
*
0055:  MOVF   41,W
0056:  ADDLW  FC
0057:  BTFSC  03.0
0058:  GOTO   0CB
0059:  ADDLW  04
005A:  GOTO   0CC
....................       case 0: 
....................       { 
....................          output_low (motorPin.pin_enable); 
005B:  MOVF   3F,W
005C:  MOVWF  42
005D:  CLRF   43
005E:  CLRF   45
005F:  CLRF   44
0060:  CALL   035
0061:  MOVF   3F,W
0062:  MOVWF  42
0063:  CLRF   43
0064:  CLRF   45
0065:  MOVLW  80
0066:  MOVWF  44
0067:  CALL   035
....................          output_low (motorPin.pin_dir); 
0068:  MOVF   40,W
0069:  MOVWF  42
006A:  CLRF   43
006B:  CLRF   45
006C:  CLRF   44
006D:  CALL   035
006E:  MOVF   40,W
006F:  MOVWF  42
0070:  CLRF   43
0071:  CLRF   45
0072:  MOVLW  80
0073:  MOVWF  44
0074:  CALL   035
....................       }break; 
0075:  GOTO   0CB
....................  
....................       case 1: 
....................       { 
....................          output_low (motorPin.pin_enable); 
0076:  MOVF   3F,W
0077:  MOVWF  42
0078:  CLRF   43
0079:  CLRF   45
007A:  CLRF   44
007B:  CALL   035
007C:  MOVF   3F,W
007D:  MOVWF  42
007E:  CLRF   43
007F:  CLRF   45
0080:  MOVLW  80
0081:  MOVWF  44
0082:  CALL   035
....................          output_high (motorPin.pin_dir); 
0083:  MOVF   40,W
0084:  MOVWF  42
0085:  MOVLW  01
0086:  MOVWF  43
0087:  CLRF   45
0088:  CLRF   44
0089:  CALL   035
008A:  MOVF   40,W
008B:  MOVWF  42
008C:  CLRF   43
008D:  CLRF   45
008E:  MOVLW  80
008F:  MOVWF  44
0090:  CALL   035
....................       }break; 
0091:  GOTO   0CB
....................  
....................       case 2: 
....................       { 
....................          output_high (motorPin.pin_enable); 
0092:  MOVF   3F,W
0093:  MOVWF  42
0094:  MOVLW  01
0095:  MOVWF  43
0096:  CLRF   45
0097:  CLRF   44
0098:  CALL   035
0099:  MOVF   3F,W
009A:  MOVWF  42
009B:  CLRF   43
009C:  CLRF   45
009D:  MOVLW  80
009E:  MOVWF  44
009F:  CALL   035
....................          output_low (motorPin.pin_dir); 
00A0:  MOVF   40,W
00A1:  MOVWF  42
00A2:  CLRF   43
00A3:  CLRF   45
00A4:  CLRF   44
00A5:  CALL   035
00A6:  MOVF   40,W
00A7:  MOVWF  42
00A8:  CLRF   43
00A9:  CLRF   45
00AA:  MOVLW  80
00AB:  MOVWF  44
00AC:  CALL   035
....................       }break; 
00AD:  GOTO   0CB
....................  
....................       case 3: 
....................       { 
....................          output_high (motorPin.pin_enable); 
00AE:  MOVF   3F,W
00AF:  MOVWF  42
00B0:  MOVLW  01
00B1:  MOVWF  43
00B2:  CLRF   45
00B3:  CLRF   44
00B4:  CALL   035
00B5:  MOVF   3F,W
00B6:  MOVWF  42
00B7:  CLRF   43
00B8:  CLRF   45
00B9:  MOVLW  80
00BA:  MOVWF  44
00BB:  CALL   035
....................          output_high (motorPin.pin_dir); 
00BC:  MOVF   40,W
00BD:  MOVWF  42
00BE:  MOVLW  01
00BF:  MOVWF  43
00C0:  CLRF   45
00C1:  CLRF   44
00C2:  CALL   035
00C3:  MOVF   40,W
00C4:  MOVWF  42
00C5:  CLRF   43
00C6:  CLRF   45
00C7:  MOVLW  80
00C8:  MOVWF  44
00C9:  CALL   035
....................       }break; 
00CA:  GOTO   0CB
....................    } 
.................... } 
00CB:  RETLW  00
....................  
.................... int1 ReceberComando() 
.................... { 
....................    cmd[0]=getc (); 
*
0100:  BTFSS  0C.5
0101:  GOTO   100
0102:  MOVF   1A,W
0103:  MOVWF  32
....................  
....................    if (cmd[0]==msg_valid_1)//valida o primeiro comando 
0104:  MOVF   32,W
0105:  SUBLW  F0
0106:  BTFSS  03.2
0107:  GOTO   119
....................    { 
....................       cmd[1]=getc (); 
0108:  BTFSS  0C.5
0109:  GOTO   108
010A:  MOVF   1A,W
010B:  MOVWF  33
....................  
....................       if (cmd[1]==msg_valid_2)//valida o segundo comando 
010C:  MOVF   33,W
010D:  SUBLW  20
010E:  BTFSS  03.2
010F:  GOTO   119
....................       { 
....................          cmd[2]=getc ();//recebe o comando 
0110:  BTFSS  0C.5
0111:  GOTO   110
0112:  MOVF   1A,W
0113:  MOVWF  34
....................          Sync(); 
....................          return 1; 
*
0116:  MOVLW  01
0117:  MOVWF  78
0118:  GOTO   11B
....................       } 
....................    } 
....................  
....................    return 0; 
0119:  MOVLW  00
011A:  MOVWF  78
.................... } 
011B:  GOTO   268 (RETURN)
....................  
.................... void verificaComando(int cmd) 
.................... { 
....................    switch (cmd) 
....................    { 
011C:  MOVF   35,W
011D:  ADDLW  CC
011E:  BTFSC  03.0
011F:  GOTO   1FE
0120:  ADDLW  34
0121:  GOTO   1FF
....................       case 0x00 : 
0122:  CLRF   29
0123:  BTFSC  0B.7
0124:  BSF    29.7
0125:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[0], 0) ; 
0126:  MOVF   2B,W
0127:  MOVWF  40
0128:  MOVF   2A,W
0129:  MOVWF  3F
012A:  CLRF   41
012B:  CALL   055
012C:  BTFSC  29.7
012D:  BSF    0B.7
....................       }break; 
012E:  GOTO   1FE
....................  
....................       case 0x01 : 
012F:  CLRF   29
0130:  BTFSC  0B.7
0131:  BSF    29.7
0132:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[0], 1) ; 
0133:  MOVF   2B,W
0134:  MOVWF  40
0135:  MOVF   2A,W
0136:  MOVWF  3F
0137:  MOVLW  01
0138:  MOVWF  41
0139:  CALL   055
013A:  BTFSC  29.7
013B:  BSF    0B.7
....................       }break; 
013C:  GOTO   1FE
....................  
....................       case 0x02 : 
013D:  CLRF   29
013E:  BTFSC  0B.7
013F:  BSF    29.7
0140:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[0], 2) ; 
0141:  MOVF   2B,W
0142:  MOVWF  40
0143:  MOVF   2A,W
0144:  MOVWF  3F
0145:  MOVLW  02
0146:  MOVWF  41
0147:  CALL   055
0148:  BTFSC  29.7
0149:  BSF    0B.7
....................       }break; 
014A:  GOTO   1FE
....................  
....................       case 0x03 : 
014B:  CLRF   29
014C:  BTFSC  0B.7
014D:  BSF    29.7
014E:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[0], 3) ; 
014F:  MOVF   2B,W
0150:  MOVWF  40
0151:  MOVF   2A,W
0152:  MOVWF  3F
0153:  MOVLW  03
0154:  MOVWF  41
0155:  CALL   055
0156:  BTFSC  29.7
0157:  BSF    0B.7
....................       }break; 
0158:  GOTO   1FE
....................  
....................       case 0x10 : 
0159:  CLRF   29
015A:  BTFSC  0B.7
015B:  BSF    29.7
015C:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[1], 0) ; 
015D:  MOVF   2D,W
015E:  MOVWF  40
015F:  MOVF   2C,W
0160:  MOVWF  3F
0161:  CLRF   41
0162:  CALL   055
0163:  BTFSC  29.7
0164:  BSF    0B.7
....................       }break; 
0165:  GOTO   1FE
....................  
....................       case 0x11 : 
0166:  CLRF   29
0167:  BTFSC  0B.7
0168:  BSF    29.7
0169:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[1], 1) ; 
016A:  MOVF   2D,W
016B:  MOVWF  40
016C:  MOVF   2C,W
016D:  MOVWF  3F
016E:  MOVLW  01
016F:  MOVWF  41
0170:  CALL   055
0171:  BTFSC  29.7
0172:  BSF    0B.7
....................       }break; 
0173:  GOTO   1FE
....................  
....................       case 0x12 : 
0174:  CLRF   29
0175:  BTFSC  0B.7
0176:  BSF    29.7
0177:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[1], 2) ; 
0178:  MOVF   2D,W
0179:  MOVWF  40
017A:  MOVF   2C,W
017B:  MOVWF  3F
017C:  MOVLW  02
017D:  MOVWF  41
017E:  CALL   055
017F:  BTFSC  29.7
0180:  BSF    0B.7
....................       }break; 
0181:  GOTO   1FE
....................  
....................       case 0x13 : 
0182:  CLRF   29
0183:  BTFSC  0B.7
0184:  BSF    29.7
0185:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[1], 3) ; 
0186:  MOVF   2D,W
0187:  MOVWF  40
0188:  MOVF   2C,W
0189:  MOVWF  3F
018A:  MOVLW  03
018B:  MOVWF  41
018C:  CALL   055
018D:  BTFSC  29.7
018E:  BSF    0B.7
....................       }break; 
018F:  GOTO   1FE
....................  
....................       case 0x20 : 
0190:  CLRF   29
0191:  BTFSC  0B.7
0192:  BSF    29.7
0193:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[2], 0) ; 
0194:  MOVF   2F,W
0195:  MOVWF  40
0196:  MOVF   2E,W
0197:  MOVWF  3F
0198:  CLRF   41
0199:  CALL   055
019A:  BTFSC  29.7
019B:  BSF    0B.7
....................       }break; 
019C:  GOTO   1FE
....................  
....................       case 0x21 : 
019D:  CLRF   29
019E:  BTFSC  0B.7
019F:  BSF    29.7
01A0:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[2], 1) ; 
01A1:  MOVF   2F,W
01A2:  MOVWF  40
01A3:  MOVF   2E,W
01A4:  MOVWF  3F
01A5:  MOVLW  01
01A6:  MOVWF  41
01A7:  CALL   055
01A8:  BTFSC  29.7
01A9:  BSF    0B.7
....................       }break; 
01AA:  GOTO   1FE
....................  
....................       case 0x22 : 
01AB:  CLRF   29
01AC:  BTFSC  0B.7
01AD:  BSF    29.7
01AE:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[2], 2) ; 
01AF:  MOVF   2F,W
01B0:  MOVWF  40
01B1:  MOVF   2E,W
01B2:  MOVWF  3F
01B3:  MOVLW  02
01B4:  MOVWF  41
01B5:  CALL   055
01B6:  BTFSC  29.7
01B7:  BSF    0B.7
....................       }break; 
01B8:  GOTO   1FE
....................  
....................       case 0x23 : 
01B9:  CLRF   29
01BA:  BTFSC  0B.7
01BB:  BSF    29.7
01BC:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[2], 3) ; 
01BD:  MOVF   2F,W
01BE:  MOVWF  40
01BF:  MOVF   2E,W
01C0:  MOVWF  3F
01C1:  MOVLW  03
01C2:  MOVWF  41
01C3:  CALL   055
01C4:  BTFSC  29.7
01C5:  BSF    0B.7
....................       }break; 
01C6:  GOTO   1FE
....................  
....................       case 0x30 : 
01C7:  CLRF   29
01C8:  BTFSC  0B.7
01C9:  BSF    29.7
01CA:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[3], 0) ; 
01CB:  MOVF   31,W
01CC:  MOVWF  40
01CD:  MOVF   30,W
01CE:  MOVWF  3F
01CF:  CLRF   41
01D0:  CALL   055
01D1:  BTFSC  29.7
01D2:  BSF    0B.7
....................       }break; 
01D3:  GOTO   1FE
....................  
....................       case 0x31 : 
01D4:  CLRF   29
01D5:  BTFSC  0B.7
01D6:  BSF    29.7
01D7:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[3], 1) ; 
01D8:  MOVF   31,W
01D9:  MOVWF  40
01DA:  MOVF   30,W
01DB:  MOVWF  3F
01DC:  MOVLW  01
01DD:  MOVWF  41
01DE:  CALL   055
01DF:  BTFSC  29.7
01E0:  BSF    0B.7
....................       }break; 
01E1:  GOTO   1FE
....................  
....................       case 0x32 : 
01E2:  CLRF   29
01E3:  BTFSC  0B.7
01E4:  BSF    29.7
01E5:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[3], 2) ; 
01E6:  MOVF   31,W
01E7:  MOVWF  40
01E8:  MOVF   30,W
01E9:  MOVWF  3F
01EA:  MOVLW  02
01EB:  MOVWF  41
01EC:  CALL   055
01ED:  BTFSC  29.7
01EE:  BSF    0B.7
....................       }break; 
01EF:  GOTO   1FE
....................  
....................       case 0x33 : 
01F0:  CLRF   29
01F1:  BTFSC  0B.7
01F2:  BSF    29.7
01F3:  BCF    0B.7
....................       { 
....................          moverMotor (motorpin[3], 3) ; 
01F4:  MOVF   31,W
01F5:  MOVWF  40
01F6:  MOVF   30,W
01F7:  MOVWF  3F
01F8:  MOVLW  03
01F9:  MOVWF  41
01FA:  CALL   055
01FB:  BTFSC  29.7
01FC:  BSF    0B.7
....................       }break; 
01FD:  GOTO   1FE
....................    } 
.................... } 
01FE:  GOTO   272 (RETURN)
....................  
.................... void desativarAll() 
.................... { 
....................    moverMotor (motorpin[0], 0) ; 
*
00D4:  MOVF   2B,W
00D5:  MOVWF  40
00D6:  MOVF   2A,W
00D7:  MOVWF  3F
00D8:  CLRF   41
00D9:  CALL   055
....................    moverMotor (motorpin[1], 0) ; 
00DA:  MOVF   2D,W
00DB:  MOVWF  40
00DC:  MOVF   2C,W
00DD:  MOVWF  3F
00DE:  CLRF   41
00DF:  CALL   055
....................    moverMotor (motorpin[2], 0) ; 
00E0:  MOVF   2F,W
00E1:  MOVWF  40
00E2:  MOVF   2E,W
00E3:  MOVWF  3F
00E4:  CLRF   41
00E5:  CALL   055
....................    moverMotor (motorpin[3], 0) ; 
00E6:  MOVF   31,W
00E7:  MOVWF  40
00E8:  MOVF   30,W
00E9:  MOVWF  3F
00EA:  CLRF   41
00EB:  CALL   055
.................... } 
....................  
....................  
.................... #int_TIMER1 
....................  
.................... void  TIMER1_isr(void)  
.................... { 
....................    desativarAll () ; 
.................... } 
....................  
00EC:  BCF    0C.0
00ED:  BCF    0A.3
00EE:  GOTO   022
.................... void main() 
.................... { 
*
0237:  CLRF   04
0238:  BCF    03.7
0239:  MOVLW  1F
023A:  ANDWF  03,F
023B:  BSF    03.5
023C:  BSF    0E.3
023D:  MOVLW  19
023E:  MOVWF  19
023F:  MOVLW  A2
0240:  MOVWF  18
0241:  MOVLW  90
0242:  BCF    03.5
0243:  MOVWF  18
0244:  MOVLW  07
0245:  MOVWF  1F
....................    setup_timer_0 (RTCC_INTERNAL|RTCC_DIV_256); 
0246:  BSF    03.5
0247:  MOVF   01,W
0248:  ANDLW  C0
0249:  IORLW  07
024A:  MOVWF  01
....................    setup_timer_1 (T1_INTERNAL|T1_DIV_BY_8); 
024B:  MOVLW  B5
024C:  BCF    03.5
024D:  MOVWF  10
....................    setup_timer_2 (T2_DISABLED, 0, 1) ; 
024E:  MOVLW  00
024F:  MOVWF  78
0250:  MOVWF  12
0251:  MOVLW  00
0252:  BSF    03.5
0253:  MOVWF  12
....................    setup_comparator (NC_NC_NC_NC); 
0254:  MOVLW  07
0255:  BCF    03.5
0256:  MOVWF  1F
0257:  BSF    03.5
0258:  MOVF   05,W
0259:  MOVLW  03
025A:  MOVWF  77
025B:  DECFSZ 77,F
025C:  GOTO   25B
025D:  BCF    03.5
025E:  MOVF   1F,W
025F:  BCF    0C.6
....................    setup_vref (FALSE); 
0260:  BSF    03.5
0261:  CLRF   1F
....................    enable_interrupts (int_TIMER1); 
0262:  BSF    0C.0
....................    enable_interrupts (GLOBAL); 
0263:  MOVLW  C0
0264:  BCF    03.5
0265:  IORWF  0B,F
....................    config (); 
0266:  GOTO   0EF
....................  
....................    while (true) 
....................    { 
....................       if (ReceberComando ()==1) 
0267:  GOTO   100
0268:  DECFSZ 78,W
0269:  GOTO   272
....................       { 
....................          output_toggle (led) ; 
026A:  BSF    03.5
026B:  BCF    06.3
026C:  MOVLW  08
026D:  BCF    03.5
026E:  XORWF  06,F
....................          verificaComando (cmd[2]); 
026F:  MOVF   34,W
0270:  MOVWF  35
0271:  GOTO   11C
....................       } 
....................    } 
0272:  GOTO   267
.................... } 
....................  
0273:  SLEEP

Configuration Fuses:
   Word  1: 3F38   NOWDT NOPUT NOPROTECT NOBROWNOUT MCLR NOLVP INTRC_IO NOCPD
